<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Edit Project</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: white;
      font-family: 'Arial', sans-serif;
    }

    .main-content {
      max-width: 700px;
      margin: 60px auto;
      padding: 20px;
    }

    .top-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
    }

    .dashboard-title {
      text-align: center;
      font-size: 2rem;
      font-weight: bold;
      margin-bottom: 20px;
    }

    .form-label {
      font-weight: bold;
    }

    input[type="text"],
    input[type="date"],
    textarea {
      background-color: #d9d9d9;
      border: none;
      border-radius: 10px;
      height: 40px;
      padding: 10px;
    }

    textarea {
      height: 150px;
      resize: none;
    }

    .form-control:focus {
      background-color: #d9d9d9;
      box-shadow: none;
    }

    .btn-custom {
      background-color: #d9d9d9;
      border: none;
      padding: 8px 20px;
      font-weight: bold;
      border-radius: 10px;
      text-decoration: none;
      color: black;
    }

    .btn-custom:hover {
      background-color: #bfbfbf;
    }

    .add-member {
      display: flex;
      gap: 10px;
    }

    .date-group {
      display: flex;
      justify-content: space-between;
      gap: 20px;
    }

    .date-group > div {
      flex: 1;
    }

    .member-dropdown {
      background-color: #d9d9d9;
      border: none;
      border-radius: 10px;
      height: 40px;
      padding: 10px;
      width: 100%;
    }

    .member-dropdown:focus {
      background-color: #d9d9d9;
      box-shadow: none;
    }

    .added-members {
      background-color: #f8f9fa;
      border: 1px solid #dee2e6;
      border-radius: 10px;
      padding: 15px;
      margin-top: 10px;
      min-height: 100px;
    }

    .member-tag {
      display: inline-block;
      background-color: black;
      color: white;
      padding: 5px 10px;
      border-radius: 15px;
      margin: 2px;
      font-size: 0.85rem;
      cursor: pointer;
    }

    .member-tag .remove {
      margin-left: 5px;
      font-weight: bold;
    }

    .member-tag:hover {
      background-color: #333;
    }

    .no-members {
      color: #6c757d;
      font-style: italic;
    }

    .info-box {
      background-color: #d9d9d9;
      padding: 10px 15px;
      border-radius: 8px;
      margin: 10px 0;
      color: #333;
      font-weight: bold;
    }

    /* Username badge styles */
    .lecturer-badge,
    .student-badge,
    .admin-badge {
      position: fixed;
      bottom: 20px;
      right: 20px;
      padding: 8px 12px;
      border-radius: 15px;
      font-size: 14px;
      font-weight: bold;
      z-index: 1000;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    }

    .lecturer-badge {
      background-color: black;
      color: white;
    }

    .student-badge {
      background-color: blue;
      color: white;
    }

    .admin-badge {
      background-color: red;
      color: white;
    }
  </style>
</head>
<body>

  <div class="main-content">
    <!-- Top bar with Back and Update buttons -->
    <div class="top-bar">
      <% if (currentUser && currentUser.roleid === 1) { %>
        <a href="/admin" class="btn btn-custom">Back</a>
      <% } else { %>
        <a href="/lecturer" class="btn btn-custom">Back</a>
      <% } %>
      <% if (project) { %>
        <button form="project-form" type="submit" class="btn btn-custom">Update</button>
      <% } %>
    </div>

    <div class="dashboard-title">Edit Project</div>

    <% if (project) { %>
      <!-- Edit Project Form -->
      <form id="project-form" action="/editISLP/<%= project.projectid %>" method="POST">
        <div class="mb-4">
          <label for="project_title" class="form-label">Project Name:</label>
          <input type="text" class="form-control" id="project_title" name="project_title" value="<%= project.project_title %>" required>
        </div>

        <!-- Note: Project head cannot be changed -->
        <div class="mb-4">
          <div class="info-box">
            <strong>Note:</strong> You remain as the project head. Project ownership cannot be transferred.
          </div>
        </div>

        <div class="mb-4">
          <label for="members" class="form-label">Add Members (Students only):</label>
          <div class="add-member">
            <select class="member-dropdown" id="userDropdown">
              <option value="">Select a student to add...</option>
              <% if (students && students.length > 0) { %>
                <% students.forEach(function(student) { %>
                  <option value="<%= student.accountid %>" data-username="<%= student.username %>" data-email="<%= student.email %>" data-role="<%= student.roleid %>">
                    <%= student.username %> (<%= student.email %>)
                  </option>
                <% }); %>
              <% } %>
            </select>
            <button type="button" class="btn btn-custom" onclick="addMember()">Add</button>
          </div>
          <div class="added-members" id="membersContainer">
            <div class="no-members" id="noMembersText">No members added yet.</div>
          </div>
          <input type="hidden" id="selectedMembers" name="members" value="">
        </div>

        <div class="mb-4">
          <label for="description" class="form-label">Add Description:</label>
          <textarea class="form-control" id="description" name="description" required><%= project.description %></textarea>
        </div>

        <% if (currentUser && currentUser.roleid === 1) { %>
          <div class="mb-4">
            <label for="status" class="form-label">Project Status:</label>
            <select class="form-control" id="status" name="status_statusid" required>
              <% if (statusOptions && statusOptions.length > 0) { %>
                <% statusOptions.forEach(function(status) { %>
                  <option value="<%= status.statusid %>" <%= project.status_statusid == status.statusid ? 'selected' : '' %>><%= status.name %></option>
                <% }); %>
              <% } %>
            </select>
          </div>
        <% } else { %>
          <!-- Lecturers cannot change status, keep current status -->
          <input type="hidden" name="status_statusid" value="<%= project.status_statusid %>">
        <% } %>

        <div class="mb-4 date-group">
          <div>
            <label for="project_start" class="form-label">Start Date:</label>
            <% 
              var startDate = new Date(project.project_start);
              var formattedStartDate = startDate.getFullYear() + '-' + 
                                      String(startDate.getMonth() + 1).padStart(2, '0') + '-' + 
                                      String(startDate.getDate()).padStart(2, '0');
            %>
            <input type="date" class="form-control" id="project_start" name="project_start" value="<%= formattedStartDate %>" required>
          </div>
          <div>
            <label for="project_end" class="form-label">End Date:</label>
            <% 
              var endDate = new Date(project.project_end);
              var formattedEndDate = endDate.getFullYear() + '-' + 
                                    String(endDate.getMonth() + 1).padStart(2, '0') + '-' + 
                                    String(endDate.getDate()).padStart(2, '0');
            %>
            <input type="date" class="form-control" id="project_end" name="project_end" value="<%= formattedEndDate %>" required>
          </div>
        </div>
      </form>
    <% } else { %>
      <p>No project found.</p>
    <% } %>
  </div>

  <script>
    let selectedMembers = [];

    // Initialize with existing members when page loads
    document.addEventListener('DOMContentLoaded', function() {
      // Get existing members data from hidden elements
      const existingMembersData = document.querySelectorAll('.existing-member-data');
      existingMembersData.forEach(function(memberElement) {
        const userId = memberElement.getAttribute('data-id');
        const username = memberElement.getAttribute('data-username');
        const email = memberElement.getAttribute('data-email');
        const role = memberElement.getAttribute('data-role');
        
        selectedMembers.push({
          id: userId,
          username: username,
          email: email,
          role: role
        });
      });
      
      if (selectedMembers.length > 0) {
        updateMembersDisplay();
        updateMembersHiddenInput();
      }
    });

    // For members/students
    function addMember() {
      const dropdown = document.getElementById('userDropdown');
      const selectedOption = dropdown.options[dropdown.selectedIndex];
      
      if (selectedOption.value === '') {
        alert('Please select a user to add.');
        return;
      }

      const userId = selectedOption.value;
      const username = selectedOption.getAttribute('data-username');
      const email = selectedOption.getAttribute('data-email');
      const role = selectedOption.getAttribute('data-role');

      // Check if user is already added
      if (selectedMembers.some(member => member.id === userId)) {
        alert('This user is already added to the project.');
        return;
      }

      // Add to selected members array
      selectedMembers.push({
        id: userId,
        username: username,
        email: email,
        role: role
      });

      // Update the display
      updateMembersDisplay();
      
      // Reset dropdown
      dropdown.selectedIndex = 0;
      
      // Update hidden input
      updateMembersHiddenInput();
    }

    function removeMember(userId) {
      selectedMembers = selectedMembers.filter(member => member.id !== userId);
      updateMembersDisplay();
      updateMembersHiddenInput();
    }

    function updateMembersDisplay() {
      const container = document.getElementById('membersContainer');
      
      if (selectedMembers.length === 0) {
        container.innerHTML = '<div class="no-members" id="noMembersText">No members added yet.</div>';
        return;
      }

      let html = '';
      selectedMembers.forEach(member => {
        html += `
          <div class="member-tag" onclick="removeMember('${member.id}')">
            ${member.username} (${member.email}) <span class="remove">×</span>
          </div>
        `;
      });
      
      container.innerHTML = html;
    }

    function updateMembersHiddenInput() {
      const hiddenInput = document.getElementById('selectedMembers');
      hiddenInput.value = JSON.stringify(selectedMembers);
    }

    // Date validation
    document.addEventListener('DOMContentLoaded', function() {
      const today = new Date().toISOString().split('T')[0];
      const startDateInput = document.getElementById('project_start');
      const endDateInput = document.getElementById('project_end');
      
      // Set minimum date to today
      startDateInput.setAttribute('min', today);
      endDateInput.setAttribute('min', today);
      
      // Add event listeners for date validation
      startDateInput.addEventListener('change', function() {
        const startDate = this.value;
        if (startDate) {
          endDateInput.setAttribute('min', startDate);
          // If end date is before start date, clear it
          if (endDateInput.value && endDateInput.value < startDate) {
            endDateInput.value = '';
            alert('End date cannot be before start date. Please select a valid end date.');
          }
        }
      });
      
      endDateInput.addEventListener('change', function() {
        const endDate = this.value;
        const startDate = startDateInput.value;
        
        if (startDate && endDate && endDate < startDate) {
          this.value = '';
          alert('End date cannot be before start date. Please select a valid end date.');
        }
      });
    });
  </script>

  <!-- Hidden elements to store existing member data -->
  <% if (existingMembers && existingMembers.length > 0) { %>
    <% existingMembers.forEach(function(member) { %>
      <div class="existing-member-data" style="display: none;"
           data-id="<%= member.accountid %>"
           data-username="<%= member.username %>"
           data-email="<%= member.email %>"
           data-role="<%= member.roleid %>">
      </div>
    <% }); %>
  <% } %>

  <!-- Username badge -->
  <% if (typeof currentUser !== 'undefined' && currentUser) { %>
    <div class="<%= currentUser.roleid === 1 ? 'admin-badge' : currentUser.roleid === 2 ? 'lecturer-badge' : 'student-badge' %>">
      <%= currentUser.username %>
    </div>
  <% } %>

</body>
</html>

<!-- Tan Ye Kai 23024918 -->
